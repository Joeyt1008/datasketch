# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_x86:
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        python-version: ['3.8']
        mongodb-version: ['latest']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install package
      run: |
        # Disable Cassandra optional extensions (faster testing).
        export CASS_DRIVER_NO_EXTENSIONS=1
        pip install -e .[test,experimental_aio]
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    - name: Install and Start Cassandra
      run: |
        echo "deb http://debian.datastax.com/community stable main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list
        curl -L http://debian.datastax.com/debian/repo_key | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install openjdk-8-jdk
        java -version
        sudo apt-get install cassandra cython3
        bash travis/wait_for_cassandra.sh
    - name: Test with pytest
      run: |
        export DO_TEST_MONGO=true
        # export DO_TEST_CASSANDRA=true
        pytest


  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Start MongoDB
          uses: supercharge/mongodb-github-action@1.3.0
          with:
            mongodb-version: latest
        - name: Install and Run tests
          run: |
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock ubuntu \
              bash -exc 'apt update && \
              apt upgrade -y && apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common && \
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
              apt-key fingerprint 0EBFCD88 && \
              add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
              apt update && \
              apt-cache policy docker-ce && \
              apt install -y docker-ce && \
              docker info'
            
            
            
            
#            docker run --privileged --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
#              arm64v8/ubuntu:20.04 \
#              bash -exc 'apt update && apt upgrade -y && apt install -y apt-transport-https ca-certificates curl software-properties-common && \
#              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
#              add-apt-repository \
#              "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
#              apt update && \
#              apt-cache policy docker-ce && \
#              apt install -y docker-ce docker-ce-cli containerd.io && \
#              /etc/init.d/docker start && \
              
#              apt-get install -y python3.8 && \
#              python3 --version && \
#              uname -m && \
#              whoami && \
#              pwd && \
#              ls && \
              
#              echo $(uname -s) && \
#              echo $(uname -m) && \
#              apt-get install -y docker-compose && \
#              docker --version && \
#              docker-compose --version
              
#              docker pull mongo && \
#              docker search mongodb && \
#              docker exec -it mongodb bash'
              
#            docker run --privileged --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
#              arm64v8/ubuntu:20.04 \
# 
#            docker run -itd --privileged docker pull arm64v8/ubuntu:20.04 /usr/sbin/init
#curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
#              curl -L "https://github.com/docker/compose/archive/refs/tags/1.29.2.tar.gz" -o /usr/local/bin/docker-compose && \
#              chmod +x /usr/local/bin/docker-compose && \
#              ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose && \
#              ls /usr/local/bin/ && \
