# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_x86:
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        python-version: ['3.8']
        mongodb-version: ['latest']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install package
      run: |
        # Disable Cassandra optional extensions (faster testing).
        export CASS_DRIVER_NO_EXTENSIONS=1
        pip install -e .[test,experimental_aio]
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    - name: Install and Start Cassandra
      run: |
        echo "deb http://debian.datastax.com/community stable main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list
        curl -L http://debian.datastax.com/debian/repo_key | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install openjdk-8-jdk
        java -version
        sudo apt-get install cassandra cython3
        bash travis/wait_for_cassandra.sh
    - name: Test with pytest
      run: |
        export DO_TEST_MONGO=true
        # export DO_TEST_CASSANDRA=true
        pytest


  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Start MongoDB
          uses: supercharge/mongodb-github-action@1.3.0
          with:
            mongodb-version: latest
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl wget vim && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              echo ================container setup=============================================
              python -m pip install --upgrade pip && \
              python -m pip install flake8 pytest && \
              python --version && \
              uname -m && \
              whoami && \
              pwd && \
              ls && \
              # Disable Cassandra optional extensions (faster testing). 
              export CASS_DRIVER_NO_EXTENSIONS=1 && \
              pip install -e .[test,experimental_aio] && \

              echo =============================mongodb 4.4.8 installation==================================
              apt-get update && apt-get install -y lsb-release && apt-get clean all
              wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - && \
              apt-get install gnupg && \
              wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - && \
              lsb_release -dc && \
              ls /etc && \
              ls /etc/apt && \
              ls /etc/apt/sources.list.d/ && \
              touch /etc/apt/sources.list.d/mongodb-org-4.4.list && \
              echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list && \
              apt-get update && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              apt-get install -y mongodb-org=4.4.8 && \
              echo "mongodb-org hold" | dpkg --set-selections && \
              echo "mongodb-org-server hold" | dpkg --set-selections && \
              echo "mongodb-org-shell hold" | dpkg --set-selections && \
              echo "mongodb-org-mongos hold" | dpkg --set-selections && \
              echo "mongodb-org-tools hold" | dpkg --set-selections && \
              ps --no-headers -o comm 1 && \
              echo ====================mongodb service starts============================================
              service mongod start && \
              service mongod status && \
              echo ====================mongodb service started============================================
              mongo && \
              
              echo =====================--cassandra installation===========================================
              apt-get update && apt-get install openjdk-8-jdk && java -version && export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-arm64/ && \
              echo "deb http://www.apache.org/dist/cassandra/debian 40x main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list && \
              deb http://www.apache.org/dist/cassandra/debian 40x main && \
              curl https://www.apache.org/dist/cassandra/KEYS | apt-key add - && \
              apt-get update && apt-get install cassandra && \
              tail -f logs/system.log && \
              nodetool status && \
                           
              echo ====================testing starts============================================
              pytest && \
              
              echo ====================travisCI==================================================
              export CASS_DRIVER_NO_EXTENSIONS=1 && \
              pip install -e .[test] && \
              pip install -e .[experimental_aio] && \
              export DO_TEST_CASSANDRA=true && \
              nosetests --exclude-dir=test/aio && \
              export DO_TEST_MONGO=true && \
              nosetests test.aio && \
              deactivate'
