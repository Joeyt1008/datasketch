language: python

python:
  - "3.8"
  # - "nightly"
  # TODO: add nightly back when this issue is fixed: https://github.com/cython/cython/issues/3266
  
arch:
  - arm64

addons:
  apt:
    sources:
      - sourceline: 'ppa:openjdk-r/ppa'
      - sourceline: 'deb http://www.apache.org/dist/cassandra/debian 311x main' 
        key_url: &apache-key https://www.apache.org/dist/cassandra/KEYS
      - sourceline: 'deb-src http://www.apache.org/dist/cassandra/debian 311x main'
        key_url: *apache-key
    packages:
      - cython3
      - openjdk-8-jdk
      - cassandra
services:
  - cassandra
  - mongodb
install:
  #Installation of mongodb
  - sudo apt-get install -y language-pack-en
  - export LC_CTYPE=en_US.UTF-8
  - sudo apt update
  - sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt update
  - sudo apt-cache policy docker-ce
  - sudo apt install -y docker-ce
  - sudo systemctl status docker
  - echo $(uname -s)
  - echo $(uname -m)
  - sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  - file /usr/local/bin/docker-compose
  - sudo apt-get install docker-compose
  - docker-compose --version
  - sudo docker search mongodb
  
  
  
  # Disable Cassandra optional extensions (faster testing).
  #- echo "deb http://debian.datastax.com/community stable main" | tee -a /etc/apt/sources.list.d/cassandra.sources.list
  #- curl -L http://debian.datastax.com/debian/repo_key | apt-key add -
  #- apt-get update
  #- apt-get -y install openjdk-8-jdk
  #- java -version
  #- apt-get -y install cassandra cython3
  #- bash travis/wait_for_cassandra.sh && \
  #- export CASS_DRIVER_NO_EXTENSIONS=1
  #- pip install -e .[test]
  #- if [[ $TRAVIS_PYTHON_VERSION == '3.6' || $TRAVIS_PYTHON_VERSION == '3.7' || $TRAVIS_PYTHON_VERSION == '3.8' || $TRAVIS_PYTHON_VERSION == 'nightly' ]]; then pip install -e .[experimental_aio]; fi
#before_script:
 # - bash travis/wait_for_cassandra.sh
#script:
  # Run non aio tests first because Python versions before 3.6 does not support aio.
  #- export DO_TEST_CASSANDRA=true
  #- nosetests --exclude-dir=test/aio
  # Run aio tests.
  #- export DO_TEST_MONGO=true
  #- if [[ $TRAVIS_PYTHON_VERSION == '3.6' || $TRAVIS_PYTHON_VERSION == '3.7' || $TRAVIS_PYTHON_VERSION == '3.8' || $TRAVIS_PYTHON_VERSION == 'nightly' ]]; then nosetests test.aio; fi


#  - sudo rm -rf libevent-core-2.0-5
#  - sudo apt-get install -y distro-info libzstd1 python3-distro-info
#  - sudo apt autoremove
#  - sudo apt-get update && sudo apt-get install -y lsb-release && sudo apt-get clean all
#  - sudo apt update && sudo apt upgrade -y
#  - sudo apt list --upgradable
